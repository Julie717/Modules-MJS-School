buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
    }
}
allprojects {
    apply plugin: 'java'
    apply plugin:  'application'
    apply plugin: 'war'
    apply plugin: 'com.bmuschko.tomcat'

    java {
        sourceCompatibility = JavaVersion.valueOf(String.valueOf(versionJava))
        targetCompatibility = JavaVersion.valueOf(String.valueOf(versionJava))
    }

    repositories {
        mavenCentral()
    }

    def tomcatVersion = '9.0.37'

    dependencies {
        implementation("org.springframework:spring-core:${springVersion}")
        implementation("org.springframework:spring-jdbc:${springVersion}")
        implementation("org.springframework:spring-context:${springVersion}")
        implementation("org.springframework:spring-webmvc:${springVersion}")
        implementation("javax.servlet:javax.servlet-api:${servletVersion}")
        implementation("org.projectlombok:lombok:${lombokVersion}")
        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
        implementation("javax.validation:validation-api:${javaxValidationVersion}")
        implementation("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
        implementation("org.apache.logging.log4j:log4j-core:${log4jVersion}")
        implementation("org.apache.logging.log4j:log4j-api:${log4jVersion}")
        tomcat "org.apache.tomcat:tomcat-catalina:${tomcatVersion}",
                "org.apache.tomcat:tomcat-coyote:${tomcatVersion}",
                "org.apache.tomcat:tomcat-jasper:${tomcatVersion}"
        implementation("org.codehaus.jackson:jackson-mapper-asl:${jacksonMapperVersion}")
        implementation("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
        implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
        implementation("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonKotlinVersion}")
        testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
        testRuntimeOnly ('org.junit.jupiter:junit-jupiter-engine')
        testImplementation ("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    }

    test {
        useJUnitPlatform()
    }

    tomcat {
        httpProtocol = 'org.apache.coyote.http11.Http11NioProtocol'
        ajpProtocol = 'org.apache.coyote.ajp.AjpNio2Protocol'
    }
}