plugins {
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "${dependencyManagementVersion}"
    id "com.ewerk.gradle.plugins.querydsl" version "${querydslVersion}" apply false
    id "org.sonarqube" version "3.1.1"
    id "jacoco"
}

group = 'com.epam.esm'
version = '1.0'

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'war'

    java {
        sourceCompatibility = JavaVersion.valueOf(String.valueOf(versionJava))
        targetCompatibility = JavaVersion.valueOf(String.valueOf(versionJava))
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter")
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-hateoas")
        compile("org.springframework.boot:spring-boot-starter-security")
        compile("org.springframework.boot:spring-boot-starter-log4j2")
        compile("javax.servlet:javax.servlet-api:${servletVersion}")
        compile("javax.validation:validation-api:${javaxValidationVersion}")
        compile("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
        compile("org.projectlombok:lombok:${lombokVersion}")
        compile("io.jsonwebtoken:jjwt:${jwtVersion}")
        compile("org.springframework.javaconfig:spring-javaconfig:${javaConfigVersion}")

        testCompile("org.springframework.security:spring-security-test")
        testCompile("org.springframework.boot:spring-boot-starter-test")

        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
        annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    }
    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }
    jacocoTestReport {
        reports {
            csv.enabled false
            html.enabled false
            xml.enabled true
            xml.destination file("${buildDir}/jacocoTest/coverage.xml")
        }
        dependsOn test
    }
    jacoco {
        toolVersion = "0.8.6"
    }
    configurations {
        compile.exclude module: 'spring-boot-starter-logging'
    }
}

bootJar {
    enabled = false
}
bootWar {
    enabled = false
}

bootRun {
    enabled = false
}